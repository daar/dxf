/** @file dxf.h 
 *  @brief DXF (AutoCAD Drawing Interchange Format) API
 *
 * This API provides support for decoding DXF files.
 */
/*! \mainpage DXF (AutoCAD Drawing Interchange Format) API
 *
 * \section intro_sec Introduction
 *
 * This code package supports parsing AutoCAD DXF files.
 *
 * \section install_sec Building
 *
 * make
 *
 * \section example Example Usage
 *
 * \code
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "dxf.h"

int main(int argc, char **argv) {
    dxf_t dxf;
    memset(&dxf, 0, sizeof(dxf_t));
    if(dxf_load(&dxf, argv[1]) != dxfTrue) {
        dxf_print_last_error(&dxf);
        exit(EXIT_FAILURE);
    }
    exit(EXIT_SUCCESS);
}
 * \endcode 
 */
#ifndef _DXF_H_
#define _DXF_H_

#include "util.h"
#include "sdict.h"

/** 
 * All possible error values.
 * The various errors generated by dxf API calls.
 */
typedef enum {
    dxfErrorOk, /**< Success. */
    dxfErrorBadFd, /**< Bad file descriptor. */
    dxfErrorInvalidFormat, /**< Invalid DXF format. */
    dxfErrorEOF, /**< End-of-file encountered. */
    dxfErrorFgets, /**< Error reading with fgets(). */
    dxfErrorLineTooLong, /**< Line length exceeds max allowed. */
    dxfErrorNonASCII, /**< Non-ASCII character encountered. */
    dxfErrorDigitExpected, /**< Non-digit encountered. */
    dxfErrorInvalidFile, /**< Invalid filename. */
    dxfErrorOpenFailed, /**< Failed to open file. */
    dxfErrorCloseFailed, /**< Failed to close file. */
    dxfErrorSnprintfFailed /**< Failed to copy data. */
} dxf_error_code_t;

/**
 * Error details.
 * Details of an error.
 */
typedef struct _dxf_error_t {
    dxf_error_code_t code; /**< Error code */
    char msg[FILENAME_MAX * 2]; /**< Error message */
} dxf_error_t;

/*! @struct dxf_t
    @brief DXF state information.

    Maintains internal processing state.
*/
typedef struct _dxf_t {
    dxf_error_t error; /**< Last error */
    int line; /**< Current DXF line number being processed */
    int column; /**< Current DXF column number being processed */
    char filename[FILENAME_MAX]; /**< Filename, if available */
    sdict_t *vars; /**< Header variables */
} dxf_t;

/* API functions */
int dxf_load(dxf_t *dxf, const char *filename);
int dxf_load_fd(dxf_t *dxf, int fd);
int dxf_get_last_error(dxf_t *dxf, dxf_error_t *error);
int dxf_has_var(dxf_t *dxf, const char *name);
void dxf_print_last_error(dxf_t *dxf);

#endif

