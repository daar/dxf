/** @file dxf.h 
 *  @brief DXF (AutoCAD Drawing Interchange Format) API
 *
 * This API provides support for decoding DXF files.
 */
/*! \mainpage DXF (AutoCAD Drawing Interchange Format) API
 *
 * \section intro_sec Introduction
 *
 * This code package supports parsing AutoCAD DXF files.
 *
 * \section install_sec Building
 *
 * make
 *
 * \section example Example Usage
 *
 * \code
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "dxf.h"

int main(int argc, char **argv) {
    dxf_handle_t dxf;
    dxf_error_code_t err;

    if((err = dxf_load(&dxf, argv[1])) != dxfErrorOk) {
        dxf_print_error(err, stderr);
        exit(EXIT_FAILURE);
    }
    ...
    (void)dxf_unload(dxf);

    exit(EXIT_SUCCESS);
}
 * \endcode 
 */
#ifndef _DXF_H_
#define _DXF_H_

#include "util.h"

/**
Handle required by API calls.
*/
typedef unsigned int dxf_handle_t;

/** 
 * All possible error values.
 * The various errors generated by dxf API calls.
 */
typedef enum {
    dxfErrorOk, /**< Success. */
    dxfErrorBadFd, /**< Bad file descriptor. */
    dxfErrorInvalidFormat, /**< Invalid DXF format. */
    dxfErrorEOF, /**< End-of-file encountered. */
    dxfErrorFgets, /**< Error reading with fgets(). */
    dxfErrorLineTooLong, /**< Line length exceeds max allowed. */
    dxfErrorNonASCII, /**< Non-ASCII character encountered. */
    dxfErrorDigitExpected, /**< Non-digit encountered. */
    dxfErrorInvalidFile, /**< Invalid filename. */
    dxfErrorOpenFailed, /**< Failed to open file. */
    dxfErrorCloseFailed, /**< Failed to close file. */
    dxfErrorSnprintfFailed,/**< Failed to copy data. */
    dxfErrorTooManyOpen, /**< Too many dxf files open. */
    dxfErrorInvalidHandle, /**< Invalid handle. */
    dxfErrorInvalidVariable /**< Invalid variable. */
} dxf_error_t;

/**
 * Error details.
 * Details of an error.
 */
typedef struct _dxf_error_t {
    dxf_error_t code; /**< Error code */
    char msg[FILENAME_MAX * 2]; /**< Error message */
} dxf_error_detail_t;

/* API functions */
dxf_error_t dxf_load(dxf_handle_t *handle, const char *filename);
dxf_error_t dxf_unload(dxf_handle_t handle);
dxf_error_t dxf_print(dxf_handle_t handle, FILE *fp);

dxf_error_t dxf_has_var(const dxf_handle_t handle, const char *name);

dxf_error_t dxf_get_last_error(const dxf_handle_t handle,
    dxf_error_detail_t *error);
dxf_error_t dxf_print_last_error(const dxf_handle_t handle);
dxf_error_t dxf_print_error(const dxf_error_t code, FILE *fp);

#endif

